[tool.poetry]
name = "easyflake"
version = "0.0.6"
description = "EasyFlake is a Python package for generating 64-bit IDs similar to Snowflake or Sonyflake."
authors = ["Takeru Furuse <tsuperis@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/tsuperis/easyflake"
packages = [{include = "easyflake"}]
keywords = ["snowflake", "sonyflake", "easyflake"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities"
]

[tool.poetry.scripts]
easyflake-cli = "easyflake.__main__:cli"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
click = "^8.1.3"
python-daemon = {version = "^2.3.2", optional = true}
grpcio = {version = "^1.51.3", optional = true}
grpcio-health-checking = {version = "^1.51.3", optional = true}

[tool.poetry.group.test.dependencies]
freezegun = "^1.2.2"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
grpcio-testing = "^1.51.3"
tox = "^4.4.6"

[tool.poetry.group.dev.dependencies]
grpcio-tools = "^1.51.3"

[tool.poetry.group.linter.dependencies]
flake8 = "6.0.0"
mypy = "^1.0.1"
isort = "^5.12.0"
black = "^23.1.0"

[tool.poetry.extras]
all = ["grpcio", "grpcio-health-checking", "python-daemon"]
grpc = ["grpcio", "grpcio-health-checking", "python-daemon"]

[tool.black]
target-version = ['py38', 'py39', 'py310', 'py311']
extend-exclude = '''
/(
    \.pytest_cache
    | easyflake\/grpc
)/
'''

[tool.isort]
profile = "black"
extend_skip_glob = ["easyflake/grpc/*"]

[tool.mypy]
ignore_missing_imports = true
show_error_context = true
pretty = true
exclude = [
    ".pytest_cache",
    "easyflake/grpc"
]

[[tool.mypy.overrides]]
module = [
    "google.protobuf"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.2,<2"]
build-backend = "poetry.core.masonry.api"
