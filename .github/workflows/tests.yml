name: Test

on:
  pull_request:
    paths:
      - "pyproject.toml"
      - "poetry.lock"
      - 'tox.ini'
      - '**.py'
  push:
    branches:
      - main
    paths:
      - "pyproject.toml"
      - "poetry.lock"
      - 'tox.ini'
      - '**.py'

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - { name: '3.11', version: '3.11', os: ubuntu-latest, tox: py311 }
          - { name: '3.10', version: '3.10', os: ubuntu-latest, tox: py310 }
          - { name: '3.9', version: '3.9', os: ubuntu-latest, tox: py39 }
          - { name: '3.8', version: '3.8', os: ubuntu-latest, tox: py38 }
          - { name: Windows, version: '3.11', os: windows-latest, tox: py311 }
          - { name: Mac, version: '3.11', os: macos-latest, tox: py311 }
    env:
      poetry_version: 1.3.2
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ matrix.name }}-${{ env.poetry_version }}

      - name: Load tox cache
        id: cached-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.name }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('tox.ini') }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: false

      - name: Install dependencies
        run: pip install tox

      - name: Run tests
        run: tox -e ${{ matrix.tox }}

      - name: Upload Coverage to Codecov
        if: matrix.name == '3.11'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
